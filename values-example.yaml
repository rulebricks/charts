# Rulebricks Helm Charts - Example Values Configuration
# This file demonstrates how the Rulebricks CLI automatically generates values.yaml
# from your rulebricks.yaml configuration file.

# Global configuration shared across all charts
global:
  # Your domain name (from rulebricks.yaml: project.domain)
  domain: "example.rulebricks.com"
  
  # Admin email for notifications and Let's Encrypt (from rulebricks.yaml: project.email)
  email: "admin@example.com"
  
  # Security settings
  security:
    network:
      # IP whitelist - empty array allows all IPs (from rulebricks.yaml: security.network.allowedIPs)
      allowedIPs: []
      # Example with IP restrictions:
      # allowedIPs:
      #   - "192.168.1.0/24"
      #   - "10.0.0.0/8"

# Rulebricks application configuration
rulebricks:
  # Enable/disable the Rulebricks app chart
  enabled: true
  
  # Application configuration
  app:
    # Your Rulebricks license key (from rulebricks.yaml: project.license or secrets)
    licenseKey: "your-license-key-here"
    
    # TLS/HTTPS configuration
    tlsEnabled: true
    
    # Number of application replicas for high availability
    replicas: 2
    
    # Self-hosted flag (automatically set by CLI)
    nextPublicSelfHosted: "1"
    
    # Database configuration (automatically configured based on database.type)
    # For self-hosted Supabase:
    supabaseUrl: "https://supabase.example.rulebricks.com"
    supabaseAnonKey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    supabaseServiceKey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    
    # For managed Supabase (when database.type = "managed"):
    # supabaseUrl: "https://your-project.supabase.co"
    # supabaseAnonKey: "your-anon-key"
    # supabaseServiceKey: "your-service-key"
    
    # For external PostgreSQL (when database.type = "external"):
    # databaseUrl: "postgresql://user:password@host:5432/dbname"
    
    # Email configuration (from rulebricks.yaml: email section)
    emailProvider: "smtp"
    smtpHost: "smtp.gmail.com"
    smtpPort: 587
    smtpUser: "noreply@example.com"
    smtpPassword: "your-smtp-password"
    emailFrom: "noreply@example.com"
    emailFromName: "Rulebricks"
    
    # Additional environment variables
    # env:
    #   - name: CUSTOM_VAR
    #     value: "custom-value"
  
  # HPS (High Performance Service) configuration
  hps:
    # Number of HPS replicas
    replicas: 2
    
    # Resource limits
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
  
  # Docker registry credentials for pulling images
  imageCredentials:
    username: "rulebricks"
    # Docker Hub PAT - format: dckr_pat_<license_key>
    password: "dckr_pat_your-license-key"
  
  # Ingress configuration
  ingress:
    enabled: true
    className: "traefik"
    hosts:
      - host: "example.rulebricks.com"
        paths:
          - path: /
            pathType: Prefix
    # TLS is handled by Traefik with cert-manager
    tls: []
  
  # Redis configuration
  redis:
    enabled: true
    persistence:
      enabled: true
      size: 1Gi

# Supabase configuration (when database.type = "self-hosted")
supabase:
  # Enable/disable self-hosted Supabase
  enabled: true  # Set to false when using managed Supabase
  
  # Database configuration
  db:
    # PostgreSQL password (generated by CLI or from secrets)
    password: "secure-database-password"
    
    # Database persistence
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""  # Uses default storage class
  
  # Authentication service configuration
  auth:
    # JWT secret for token signing (generated by CLI: openssl rand -base64 32)
    jwtSecret: "your-32-character-jwt-secret-here"
    
    # Site URL for OAuth redirects
    siteUrl: "https://example.rulebricks.com"
    
    # SMTP configuration (inherited from global email settings)
    smtp:
      host: "smtp.gmail.com"
      port: 587
      user: "noreply@example.com"
      password: "your-smtp-password"
      sender: "noreply@example.com"
  
  # Storage service configuration
  storage:
    enabled: true
    persistence:
      enabled: true
      size: 10Gi
  
  # Analytics configuration
  analytics:
    enabled: false  # Can be enabled if needed
  
  # Kong API Gateway configuration
  kong:
    enabled: true

# Traefik ingress controller configuration
traefik:
  enabled: true
  
  # Service configuration
  service:
    type: LoadBalancer
    # annotations:
    #   # AWS Load Balancer annotations
    #   service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    #   # Azure Load Balancer annotations
    #   service.beta.kubernetes.io/azure-load-balancer-resource-group: "myResourceGroup"
    #   # GCP Load Balancer annotations
    #   cloud.google.com/load-balancer-type: "Internal"
  
  # TLS configuration with cert-manager
  additionalArguments:
    - "--certificatesresolvers.letsencrypt.acme.email=admin@example.com"
    - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
    - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"

# Monitoring configuration (from rulebricks.yaml: monitoring section)
monitoring:
  # Enable/disable monitoring stack
  enabled: false
  
  # Prometheus configuration
  prometheus:
    enabled: false
    retention: "30d"
    storageSize: "10Gi"
  
  # Grafana configuration
  grafana:
    enabled: false
    adminPassword: "admin"  # Should be changed
    ingress:
      enabled: true
      hosts:
        - "grafana.example.rulebricks.com"

# Example configurations for different scenarios:

# --- Scenario 1: Self-hosted with everything enabled ---
# This is the default configuration generated by the CLI

# --- Scenario 2: Using managed Supabase ---
# rulebricks:
#   app:
#     supabaseUrl: "https://your-project.supabase.co"
#     supabaseAnonKey: "your-anon-key"
#     supabaseServiceKey: "your-service-key"
# supabase:
#   enabled: false

# --- Scenario 3: Using external PostgreSQL ---
# rulebricks:
#   app:
#     databaseUrl: "postgresql://user:password@host:5432/dbname"
# supabase:
#   enabled: false

# --- Scenario 4: High security configuration ---
# global:
#   security:
#     network:
#       allowedIPs:
#         - "10.0.0.0/8"      # Internal network only
#         - "192.168.1.0/24"  # Office network
# rulebricks:
#   app:
#     replicas: 3  # More replicas for HA
#   hps:
#     replicas: 3

# --- Scenario 5: Development/testing configuration ---
# rulebricks:
#   app:
#     replicas: 1  # Single replica for dev
#     tlsEnabled: false  # No TLS for local dev
#   hps:
#     replicas: 1
# supabase:
#   db:
#     persistence:
#       enabled: false  # No persistence for testing
#   storage:
#     persistence:
#       enabled: false